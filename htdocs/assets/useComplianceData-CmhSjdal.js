var _=Object.defineProperty,g=Object.defineProperties;var v=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;var m=(t,r,a)=>r in t?_(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a,y=(t,r)=>{for(var a in r||(r={}))w.call(r,a)&&m(t,a,r[a]);if(u)for(var a of u(r))S.call(r,a)&&m(t,a,r[a]);return t},f=(t,r)=>g(t,v(r));var p=(t,r,a)=>new Promise((c,n)=>{var e=o=>{try{d(a.next(o))}catch(i){n(i)}},s=o=>{try{d(a.throw(o))}catch(i){n(i)}},d=o=>o.done?c(o.value):Promise.resolve(o.value).then(e,s);d((a=a.apply(t,r)).next())});import{u as h}from"./query-vendor-B2F_wWlc.js";import{s as l}from"./index-ZwIgorfy.js";const q=()=>h({queryKey:["compliance-stats"],queryFn:()=>p(void 0,null,function*(){let t=0;try{const{count:e}=yield l.from("profiles").select("*",{count:"exact",head:!0}).eq("role","driver");t=e||0}catch(e){console.warn("Error fetching drivers for compliance stats:",e)}let r=0;try{const{count:e}=yield l.from("vehicles").select("*",{count:"exact",head:!0});r=e||0}catch(e){console.warn("Error fetching vehicles for compliance stats:",e)}const a=0,c=0,n=t>0?95:0;return{totalDrivers:t,totalVehicles:r,activeViolations:a,criticalAlerts:c,overallScore:n,driversCompliant:t,vehiclesCompliant:r}})}),I=()=>h({queryKey:["upcoming-deadlines"],queryFn:()=>p(void 0,null,function*(){const t=new Date,r=new Date(t.getTime()+30*24*60*60*1e3),a=[];let c=[];try{const{data:e}=yield l.from("driver_licenses").select("*").gte("expiry_date",t.toISOString().split("T")[0]).lte("expiry_date",r.toISOString().split("T")[0]).order("expiry_date",{ascending:!0});if(e&&e.length>0){const s=[...new Set(e.filter(i=>i.driver_id).map(i=>i.driver_id))];let d=[];if(s.length>0){const{data:i}=yield l.from("profiles").select("id, first_name, last_name").in("id",s);d=i||[]}const o=new Map(d.map(i=>[i.id,i]));c=e.map(i=>f(y({},i),{profiles:i.driver_id&&o.has(i.driver_id)?o.get(i.driver_id):null}))}}catch(e){console.warn("driver_licenses table not found, skipping license deadlines:",e)}let n=[];try{const{data:e}=yield l.from("compliance_alerts").select("*").not("due_date","is",null).gte("due_date",t.toISOString().split("T")[0]).lte("due_date",r.toISOString().split("T")[0]).eq("status","active").order("due_date",{ascending:!0});n=e||[]}catch(e){console.warn("compliance_alerts table not found, skipping alert deadlines:",e)}return c==null||c.forEach(e=>{if(e.profiles){const s=Math.ceil((new Date(e.expiry_date).getTime()-t.getTime())/864e5);a.push({type:"Driver License",entity:`${e.profiles.first_name} ${e.profiles.last_name}`,date:e.expiry_date,days:s,severity:s<=7?"critical":s<=14?"high":"medium"})}}),n==null||n.forEach(e=>{const s=Math.ceil((new Date(e.due_date).getTime()-t.getTime())/864e5);a.push({type:e.alert_type.replace("_"," ").replace(/\b\w/g,d=>d.toUpperCase()),entity:e.title,date:e.due_date,days:s,severity:e.severity||(s<=7?"critical":s<=14?"high":"medium")})}),a.sort((e,s)=>e.days-s.days)})});export{I as a,q as u};
