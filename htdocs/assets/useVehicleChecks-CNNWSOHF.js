var w=Object.defineProperty,y=Object.defineProperties;var p=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var k=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable;var _=(a,e,i)=>e in a?w(a,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[e]=i,g=(a,e)=>{for(var i in e||(e={}))k.call(e,i)&&_(a,i,e[i]);if(v)for(var i of v(e))q.call(e,i)&&_(a,i,e[i]);return a},m=(a,e)=>y(a,p(e));var u=(a,e,i)=>new Promise((n,t)=>{var l=o=>{try{d(i.next(o))}catch(s){t(s)}},c=o=>{try{d(i.throw(o))}catch(s){t(s)}},d=o=>o.done?n(o.value):Promise.resolve(o.value).then(l,c);d((i=i.apply(a,e)).next())});import{u as E,a as b,b as C}from"./query-vendor-B2F_wWlc.js";import{u as f,s as h,l as V}from"./index-ZwIgorfy.js";const P=a=>{const{profile:e}=f();return E({queryKey:["vehicle-checks",a,e==null?void 0:e.organization_id],queryFn:()=>u(void 0,null,function*(){if(!(e!=null&&e.organization_id))return[];try{let i=h.from("vehicle_checks").select("*").eq("organization_id",e.organization_id).order("check_date",{ascending:!1});const{data:n,error:t}=yield i;if(t)return console.warn("Vehicle checks query failed:",t.message),[];if(!n||n.length===0)return[];const l=[...new Set(n.map(r=>r.vehicle_id).filter(Boolean))],c=[...new Set(n.map(r=>r.driver_id).filter(Boolean))],[d,o]=yield Promise.all([l.length>0?h.from("vehicles").select("id, vehicle_number, license_plate, make, model, organization_id").in("id",l).eq("organization_id",e.organization_id):Promise.resolve({data:[],error:null}),c.length>0?h.from("profiles").select("id, first_name, last_name, employee_id, organization_id").in("id",c).eq("organization_id",e.organization_id):Promise.resolve({data:[],error:null})]),s=new Map((d.data||[]).map(r=>[r.id,r])),z=new Map((o.data||[]).map(r=>[r.id,r]));return n.map(r=>m(g({},r),{vehicles:r.vehicle_id?s.get(r.vehicle_id):void 0,driver_profile:r.driver_id?z.get(r.driver_id):void 0})).filter(r=>!r.vehicles||r.vehicles.organization_id===e.organization_id)}catch(i){return console.warn("Vehicle checks fetch failed:",i instanceof Error?i.message:"Unknown error"),[]}}),enabled:!!(e!=null&&e.organization_id),retry:1,staleTime:5*60*1e3,gcTime:10*60*1e3})},T=()=>{const a=b(),{toast:e}=V(),{profile:i}=f();return C({mutationFn:n=>u(void 0,null,function*(){if(!(i!=null&&i.organization_id))throw new Error("Organization ID is required to create vehicle check");const{data:t,error:l}=yield h.from("vehicles").select("organization_id").eq("id",n.vehicle_id).single();if(l||!t||t.organization_id!==i.organization_id)throw new Error("Vehicle not found or access denied");const{data:c,error:d}=yield h.from("profiles").select("organization_id").eq("id",n.driver_id).single();if(d||!c||c.organization_id!==i.organization_id)throw new Error("Driver not found or access denied");const{data:o,error:s}=yield h.from("vehicle_checks").insert([n]).select().single();if(s)throw new Error(`Failed to create vehicle check: ${s.message}`);return o}),onSuccess:()=>{a.invalidateQueries({queryKey:["vehicle-checks"]}),e({title:"Success",description:"Vehicle check submitted successfully"})},onError:n=>{e({title:"Error",description:"Failed to submit vehicle check: "+n.message,variant:"destructive"})}})};export{T as a,P as u};
