var w=Object.defineProperty,z=Object.defineProperties;var q=Object.getOwnPropertyDescriptors;var m=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable;var v=(a,t,e)=>t in a?w(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e,g=(a,t)=>{for(var e in t||(t={}))b.call(t,e)&&v(a,e,t[e]);if(m)for(var e of m(t))V.call(t,e)&&v(a,e,t[e]);return a},h=(a,t)=>z(a,q(t));var c=(a,t,e)=>new Promise((r,n)=>{var s=o=>{try{l(e.next(o))}catch(d){n(d)}},p=o=>{try{l(e.throw(o))}catch(d){n(d)}},l=o=>o.done?r(o.value):Promise.resolve(o.value).then(s,p);l((e=e.apply(a,t)).next())});import{u as E,a as y,b as _}from"./query-vendor-B2F_wWlc.js";import{u as f,s as u,J as i}from"./index-ZwIgorfy.js";const F=()=>{const{user:a,profile:t}=f();return E({queryKey:["vehicles",t==null?void 0:t.organization_id],queryFn:()=>c(void 0,null,function*(){if(!(t!=null&&t.organization_id))throw console.log("❌ No organization ID available"),new Error("Organization ID is required");console.log("🚗 Fetching vehicles from database..."),console.log("🔍 Organization ID:",t.organization_id);try{const{data:e,error:r}=yield u.from("vehicles").select("*").eq("organization_id",t.organization_id).order("vehicle_number",{ascending:!0});if(r)throw console.error("❌ Database error fetching vehicles:",r),r;if(console.log("✅ Raw vehicles data from database:",e),console.log("📊 Number of vehicles found:",(e==null?void 0:e.length)||0),!e||e.length===0)return console.log("⚠️ No vehicles found in database for organization:",t.organization_id),console.log("💡 This is normal if you haven't added any vehicles yet"),[];const n=e.map(s=>(console.log("🔄 Transforming vehicle:",s),h(g({},s),{status:s.status||"active",capacity:0,is_active:s.status==="active"||s.status===null,fuel_type:s.fuel_type||"unknown",mileage:0,type:"bus",seating_capacity:0,requires_maintenance:s.status==="maintenance",last_maintenance:s.updated_at,next_maintenance:s.updated_at,mot_expiry:s.updated_at,next_service_date:s.updated_at,service_interval_months:6})));return console.log("✅ Transformed vehicles:",n),n}catch(e){throw console.error("💥 Error in useVehicles:",e),e}}),enabled:!!(t!=null&&t.organization_id)})},x=()=>{const{profile:a}=f(),t=y();return _({mutationFn:e=>c(void 0,null,function*(){if(!(a!=null&&a.organization_id))throw new Error("Organization ID is required");const{data:r,error:n}=yield u.from("vehicles").insert(h(g({},e),{organization_id:a.organization_id})).select().single();if(n)throw n;return r}),onSuccess:()=>{t.invalidateQueries({queryKey:["vehicles"]}),i.success("Vehicle created successfully")},onError:e=>{console.error("Error creating vehicle:",e),i.error("Failed to create vehicle: "+e.message)}})},I=()=>{const a=y();return _({mutationFn:r=>c(void 0,[r],function*({id:t,updates:e}){const{data:n,error:s}=yield u.from("vehicles").update(e).eq("id",t).select().single();if(s)throw s;return n}),onSuccess:()=>{a.invalidateQueries({queryKey:["vehicles"]}),i.success("Vehicle updated successfully")},onError:t=>{console.error("Error updating vehicle:",t),i.error("Failed to update vehicle: "+t.message)}})},K=()=>{const a=y();return _({mutationFn:t=>c(void 0,null,function*(){const{error:e}=yield u.from("vehicles").delete().eq("id",t);if(e)throw e}),onSuccess:()=>{a.invalidateQueries({queryKey:["vehicles"]}),i.success("Vehicle deleted successfully")},onError:t=>{console.error("Error deleting vehicle:",t),i.error("Failed to delete vehicle: "+t.message)}})},S=()=>{const{data:a=[]}=F();return{total:a.length,active:a.filter(e=>e.status==="active"||e.is_active).length,maintenance:a.filter(e=>e.status==="maintenance").length,out_of_service:a.filter(e=>e.status==="out_of_service"||!e.is_active).length,average_age:a.length>0?Math.round(a.reduce((e,r)=>e+(new Date().getFullYear()-(r.year||2020)),0)/a.length):0,by_type:a.reduce((e,r)=>{const n=r.type||"unknown";return e[n]=(e[n]||0)+1,e},{})}};export{I as a,x as b,K as c,S as d,F as u};
