import{m as w,H as D,J as g}from"./main-DVuL102c.js";const v=()=>{const{profile:t}=w();return D({queryKey:["trial-status",t==null?void 0:t.organization_id],queryFn:async()=>{var i,o;if(!(t!=null&&t.organization_id))throw new Error("No organization ID found");try{const{data:n,error:a}=await g.from("organization_trials").select("*").eq("organization_id",t.organization_id).order("created_at",{ascending:!1}).limit(1);if(a)if(a.code==="PGRST116"||a.code==="406"||(i=a.message)!=null&&i.includes('relation "organization_trials" does not exist')||(o=a.message)!=null&&o.includes("Cannot coerce the result to a single JSON object"))console.warn("organization_trials table does not exist or is not accessible:",a.message);else throw a;const e=n&&n.length>0?n[0]:null,{data:r,error:s}=await g.from("profiles").select("id").eq("organization_id",t.organization_id).eq("role","driver");if(s)throw s;const l=(r==null?void 0:r.length)||0,c=(e==null?void 0:e.trial_end_date)||new Date().toISOString(),h=(e==null?void 0:e.trial_start_date)||new Date().toISOString(),u=new Date(c),_=new Date,d=Math.max(0,Math.ceil((u.getTime()-_.getTime())/(1e3*60*60*24))),m=(e==null?void 0:e.trial_status)==="active"&&d>0,z=(e==null?void 0:e.max_drivers)||10;return{isActive:m,daysLeft:d,trialEndDate:c,maxDrivers:z,currentDrivers:l,organizationId:t.organization_id}}catch(n){return console.warn("Trial status check failed:",n),{isActive:!1,daysLeft:0,trialEndDate:new Date().toISOString(),maxDrivers:10,currentDrivers:0,organizationId:(t==null?void 0:t.organization_id)||""}}},enabled:!!(t!=null&&t.organization_id),staleTime:1e3*60*5})};export{v as u};
