import{u as k}from"./useQuery-Dbdyc74j.js";import{q as I,s as f}from"./main-piTIAPSx.js";const N=u=>{const{user:t}=I(),d=(u||new Date).toISOString().split("T")[0];return k({queryKey:["parent-schedules",t==null?void 0:t.id,d],queryFn:async()=>{if(!(t!=null&&t.id))return[];console.log("Fetching parent schedules for date:",d);try{const{data:c,error:m}=await f.from("child_profiles").select("*").eq("parent_id",t.id).eq("is_active",!0);if(m)throw console.error("Error fetching children:",m),m;if(!c||c.length===0)return console.log("No children found for parent"),[];const{data:i,error:h}=await f.from("route_assignments").select("*").eq("assignment_date",d).eq("status","active").eq("is_active",!0);if(h)throw console.error("Error fetching route assignments:",h),h;const $=(i==null?void 0:i.map(e=>e.route_id).filter(Boolean))||[],{data:p}=$.length>0?await f.from("routes").select("id, name, start_location, end_location").in("id",$):{data:[]},w=(i==null?void 0:i.map(e=>e.driver_id).filter(Boolean))||[],{data:_}=w.length>0?await f.from("profiles").select("id, first_name, last_name, phone").in("id",w):{data:[]},y=(i==null?void 0:i.map(e=>e.vehicle_id).filter(Boolean))||[],{data:g}=y.length>0?await f.from("vehicles").select("id, vehicle_number, license_plate").in("id",y):{data:[]},s=[];for(const e of c){const a=i==null?void 0:i.find(o=>o.route_id===e.route_id);if(a){const o=p==null?void 0:p.find(l=>l.id===a.route_id),n=_==null?void 0:_.find(l=>l.id===a.driver_id),v=g==null?void 0:g.find(l=>l.id===a.vehicle_id);o&&n&&v&&(e.pickup_time&&s.push({id:`pickup-${e.id}-${a.id}`,childName:`${e.first_name} ${e.last_name}`,type:"pickup",time:e.pickup_time,location:e.pickup_location||o.start_location||"Pickup Location",driverName:`${n.first_name||"Unknown"} ${n.last_name||"Driver"}`,vehicleNumber:v.vehicle_number,status:"scheduled",childId:e.id,routeId:e.route_id,routeName:o.name,assignmentDate:d}),e.dropoff_time&&s.push({id:`dropoff-${e.id}-${a.id}`,childName:`${e.first_name} ${e.last_name}`,type:"dropoff",time:e.dropoff_time,location:e.dropoff_location||o.end_location||"Dropoff Location",driverName:`${n.first_name||"Unknown"} ${n.last_name||"Driver"}`,vehicleNumber:v.vehicle_number,status:"scheduled",childId:e.id,routeId:e.route_id,routeName:o.name,assignmentDate:d}))}}return s.sort((e,a)=>{const o=new Date(`2000-01-01T${e.time}`),n=new Date(`2000-01-01T${a.time}`);return o.getTime()-n.getTime()}),console.log("Generated parent schedule items:",s),s}catch(c){return console.error("Error in useParentSchedules:",c),[]}},enabled:!!(t!=null&&t.id)})},b=u=>{const{data:t=[]}=N(u);return{totalTrips:t.length,pickups:t.filter(r=>r.type==="pickup").length,dropoffs:t.filter(r=>r.type==="dropoff").length,completed:t.filter(r=>r.status==="completed").length,inProgress:t.filter(r=>r.status==="in_progress").length,delayed:t.filter(r=>r.status==="delayed").length}};export{b as a,N as u};
