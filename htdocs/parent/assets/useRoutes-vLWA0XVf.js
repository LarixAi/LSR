import{u}from"./useQuery-Dbdyc74j.js";import{q as n,s as i,J as c,$ as o}from"./main-piTIAPSx.js";import{u as d}from"./useMutation-B8vlA97s.js";const g=()=>{const{user:t,profile:r}=n();return u({queryKey:["routes",r==null?void 0:r.organization_id],queryFn:async()=>{if(!(r!=null&&r.organization_id))throw new Error("Organization ID is required");console.log("Fetching routes from database...");const{data:e,error:a}=await i.from("routes").select(`
          *,
          assignments:route_assignments(*)
        `).eq("organization_id",r.organization_id).order("created_at",{ascending:!1});if(a)throw console.error("Error fetching routes:",a),a;return console.log("Fetched routes:",e),e||[]},enabled:!!(r!=null&&r.organization_id)})},h=()=>{const{profile:t}=n(),r=c();return d({mutationFn:async e=>{if(!(t!=null&&t.organization_id))throw new Error("Organization information required");const{data:a,error:s}=await i.from("routes").insert({...e,organization_id:t.organization_id}).select().single();if(s)throw s;return a},onSuccess:()=>{r.invalidateQueries({queryKey:["routes"]}),o.success("Route created successfully")},onError:e=>{console.error("Error creating route:",e),o.error("Failed to create route: "+e.message)}})},y=()=>{const{data:t=[]}=g();return{total:t.length,active:t.filter(e=>e.status==="active").length,inactive:t.filter(e=>e.status==="inactive").length,total_distance:t.reduce((e,a)=>e+(a.distance||0),0),average_distance:t.length>0?t.reduce((e,a)=>e+(a.distance||0),0)/t.length:0,total_estimated_time:t.reduce((e,a)=>e+(a.estimated_time||0),0),average_estimated_time:t.length>0?t.reduce((e,a)=>e+(a.estimated_time||0),0)/t.length:0}};export{y as a,h as b,g as u};
