import{u as h}from"./useQuery-Dbdyc74j.js";import{q as z,s as l,J as u,a as g}from"./main-piTIAPSx.js";import{u as m}from"./useMutation-B8vlA97s.js";const E=()=>{const{profile:t}=z();return h({queryKey:["trial-status",t==null?void 0:t.organization_id],queryFn:async()=>{var s,r;if(!(t!=null&&t.organization_id))throw new Error("No organization ID found");try{const{data:n,error:e}=await l.from("organization_trials").select("*").eq("organization_id",t.organization_id).order("created_at",{ascending:!1}).limit(1);if(e)if(e.code==="PGRST116"||e.code==="406"||(s=e.message)!=null&&s.includes('relation "organization_trials" does not exist')||(r=e.message)!=null&&r.includes("Cannot coerce the result to a single JSON object"))console.warn("organization_trials table does not exist or is not accessible:",e.message);else throw e;const a=n&&n.length>0?n[0]:null,{data:i,error:o}=await l.from("profiles").select("id").eq("organization_id",t.organization_id).eq("role","driver");if(o)throw o;const _=(i==null?void 0:i.length)||0,c=(a==null?void 0:a.trial_end_date)||new Date().toISOString(),D=(a==null?void 0:a.trial_start_date)||new Date().toISOString(),w=new Date(c),f=new Date,d=Math.max(0,Math.ceil((w.getTime()-f.getTime())/(1e3*60*60*24))),v=(a==null?void 0:a.trial_status)==="active"&&d>0,y=(a==null?void 0:a.max_drivers)||10;return{isActive:v,daysLeft:d,trialEndDate:c,maxDrivers:y,currentDrivers:_,organizationId:t.organization_id}}catch(n){return console.warn("Trial status check failed:",n),{isActive:!1,daysLeft:0,trialEndDate:new Date().toISOString(),maxDrivers:10,currentDrivers:0,organizationId:(t==null?void 0:t.organization_id)||""}}},enabled:!!(t!=null&&t.organization_id),staleTime:1e3*60*5})},p=()=>{const t=u(),{toast:s}=g();return m({mutationFn:async r=>{var a;const n=new Date,e=new Date;e.setDate(e.getDate()+14);try{const{data:i,error:o}=await l.from("organization_trials").insert({organization_id:r,trial_start_date:n.toISOString(),trial_end_date:e.toISOString(),trial_status:"active",max_drivers:10,features:"professional"}).select().single();if(o)throw o.code==="406"||(a=o.message)!=null&&a.includes('relation "organization_trials" does not exist')?new Error("Trial management tables not set up. Please run the database migration first."):o;return i}catch(i){throw i instanceof Error&&i.message.includes("Trial management tables not set up")?i:new Error("Failed to create trial. Please try again.")}return data},onSuccess:()=>{t.invalidateQueries({queryKey:["trial-status"]}),s({title:"Trial Started",description:"Your 14-day free trial has been activated!"})},onError:r=>{const n=r instanceof Error&&r.message.includes("Trial management tables not set up")?"Trial management tables not set up. Please run the database migration first.":"Failed to start trial. Please try again.";s({title:"Error",description:n,variant:"destructive"})}})},q=()=>{const t=u(),{toast:s}=g();return m({mutationFn:async({organizationId:r,planId:n})=>{const{data:e,error:a}=await l.from("organization_trials").update({trial_status:"converted"}).eq("organization_id",r).select().single();if(a)throw a;return e},onSuccess:()=>{t.invalidateQueries({queryKey:["trial-status"]}),s({title:"Trial Converted",description:"Your trial has been successfully converted to a paid plan!"})},onError:r=>{s({title:"Error",description:"Failed to convert trial. Please try again.",variant:"destructive"})}})};export{p as a,q as b,E as u};
